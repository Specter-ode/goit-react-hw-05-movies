{"version":3,"file":"static/js/947.7ea7403b.chunk.js","mappings":"8NACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA2F,0B,iDCiD3F,EA3CoB,WAClB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBN,GAAW,GADU,mBAGAO,EAAAA,EAAAA,IAAgBJ,GAHhB,OAGbK,EAHa,OAInBC,QAAQC,IAAI,SAAUF,GACtBV,EAAWU,EAAKG,SALG,gDAOnBT,EAAS,KAAMU,SAPI,yBASnBZ,GAAW,GATQ,4EAAH,qDAYpBM,MACC,CAACH,IACJ,IAAMU,EAAWhB,EAAQiB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1C,OACE,gBAAIC,UAAWC,EAAf,WACE,qCAAaH,MACb,cAAGE,UAAWC,EAAd,SAAuBF,MAFIF,MAMjC,OACE,gCACGhB,IAAW,SAACqB,EAAA,EAAD,IACXnB,IAAS,uDACTJ,EAAQwB,OAAS,GAAI,eAAIH,UAAWC,EAAf,SAAwBN,KAAiB,yE,iMCvC/DS,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAiB,mCAAG,sGACRN,EAAS,wBADD,uBACvBd,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBqB,EAAiB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACRT,EAAS,gBAAiB,CAC/CG,OAAQ,CACNK,MAAAA,EACAC,KAAAA,KAJ2B,uBACvBvB,EADuB,EACvBA,KADuB,kBAOxBA,GAPwB,2CAAH,sDAUjBwB,EAAY,mCAAG,WAAM7B,GAAN,yFACHmB,EAAS,UAAD,OAAWnB,IADhB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZyB,EAAY,mCAAG,WAAM9B,GAAN,yFACHmB,EAAS,UAAD,OAAWnB,EAAX,aADL,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAe,mCAAG,WAAMJ,GAAN,yFACNmB,EAAS,UAAD,OAAWnB,EAAX,aADF,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.js","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewsPage_list__IK83Q\",\"items\":\"ReviewsPage_items__O5OYZ\",\"name\":\"ReviewsPage_name__NCu2J\",\"text\":\"ReviewsPage_text__JDMhb\"};","import s from './ReviewsPage.module.css';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../services/movieApi';\nimport Spinner from '../../components/Spinner/Spinner';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieReviews(movieId);\n        console.log('data: ', data);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n  const elements = reviews.map(({ id, author, content }) => {\n    return (\n      <li className={s.items} key={id}>\n        <h3>Author: {author}</h3>\n        <p className={s.name}>{content}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      {loading && <Spinner />}\n      {error && <p>Movies not found, try again</p>}\n      {reviews.length > 0 ? <ul className={s.list}>{elements}</ul> : <p>We don't have any reviews for this movie</p>}\n    </>\n  );\n};\nReviewsPage.propTypes = {\n  id: PropTypes.number,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '34dbf9d1a3fd74b10bf7ab9eec59866f',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance('/trending/movie/week');\n  return data;\n};\n\nexport const getMoviesBySearch = async (query, page = 1) => {\n  const { data } = await instance('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance(`/movie/${movieId}`);\n  return data;\n};\nexport const getMovieCast = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance(`/movie/${movieId}/reviews`);\n  return data;\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovieById","getMovieReviews","data","console","log","results","message","elements","map","id","author","content","className","s","Spinner","length","instance","axios","baseURL","params","api_key","language","getTrendingMovies","getMoviesBySearch","query","page","getMovieById","getMovieCast"],"sourceRoot":""}